# -----------------------------------------------------------
#
# this file contains configuration as to what to check to determine whether the test was successful or not
#
# Rules:
#
# - each (non-commented) line contains one check
# - checks are looked for in the 'scripts' subfolder of the test, in the global 'scripts' folder or in the PATH (in that order)
# - exit code needs to be 0 (if you expect non-zero exit code of the script, prepend a '!' before the check executable
# - you can use exists(), file(), filesize() and content() in your check description, gee will replace the result of the method specified with this. is always relative to the working directory of the job
#   - exists(): returns true or false
#   - file(): returns the absolute path to the (cached) output file in the job directory (it is downloaded to the machine where the test runs)
#   - filesize(): the filesize in bytes of the specified file
#   - content(): the content of the specified file
# - you can name your check, for clearer log output. Do that by prepending = before the check itself
# - if a check fails, possible stdout & stderr of the check itself are logged
#
#
# below only shows what is possible, the tests shown here are pretty trivial
#
# -----------------------------------------------------------


# there is a global 'checks' directory in the root of your tests
check_stdout_exists=is_true.py exists(stdout.txt)

# we can either use an existing application directly
check_eeglab_string=grep EEGLAB: file(stdout.txt)

